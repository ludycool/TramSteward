<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Moon.Orm.Fakes</name>
    </assembly>
    <members>
        <member name="T:Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates">
            <summary>包含用于 Moon.Orm 的存根和填充码的自定义委托</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimDb">
            <summary>Moon.Orm.Db 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.#ctor(Moon.Orm.Db)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.ExecuteSqlToOwnListOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteSqlToOwnList(String sql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.ExistOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Boolean})">
            <summary>设置 Db.Exist(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Db.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetCountSQLOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Text.StringBuilder})">
            <summary>设置 Db.GetCountSQL(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetEntityOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,``0})">
            <summary>设置 Db.GetEntity(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetInt32CountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Db.GetInt32Count(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetRemoveParametersSQLOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Text.StringBuilder})">
            <summary>设置 Db.GetRemoveParametersSQL(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.GetTableNameFromTableSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String})">
            <summary>设置 Db.GetTableNameFromTableSet() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32})">
            <summary>设置 Db.Remove() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Db.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AddEntityBase">
            <summary>设置 Db.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AdoMethodGet">
            <summary>设置 Db.get_AdoMethod() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AdoMethodSetDbAdoMethod">
            <summary>设置 Db.set_AdoMethod(DbAdoMethod value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.Close">
            <summary>设置 Db.Close() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ConnectionGet">
            <summary>设置 Db.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ConnectionSetDbConnection">
            <summary>设置 Db.set_Connection(DbConnection value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.Constructor">
            <summary>设置 Db.Db() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ConstructorString">
            <summary>设置 Db.Db(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.CreateDbByConfigNameString">
            <summary>设置 Db.CreateDbByConfigName(String name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.CreateDefaultDb">
            <summary>设置 Db.CreateDefaultDb() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.CurrentSQLGet">
            <summary>设置 Db.get_CurrentSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.CurrentSQLSetString">
            <summary>设置 Db.set_CurrentSQL(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.DebugEnabledGet">
            <summary>设置 Db.get_DebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.DebugEnabledSetBoolean">
            <summary>设置 Db.set_DebugEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.Dispose">
            <summary>设置 Db.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Db.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Db.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToDataSetString">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToDictionaryListString">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Db.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlWithNonQueryString">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetAddSQLEntityBase">
            <summary>设置 Db.GetAddSQL(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetDataSetMQLBase">
            <summary>设置 Db.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetDbDataReaderStringCommandType">
            <summary>设置 Db.GetDbDataReader(String commandText, CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetDictionaryListMQLBase">
            <summary>设置 Db.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetDynamicListStringString">
            <summary>设置 Db.GetDynamicList(String sql, String className) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetEntityTableNameEntityBase">
            <summary>设置 Db.GetEntityTableName(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetJsonMQLBase">
            <summary>设置 Db.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetModelBySqlStringString">
            <summary>设置 Db.GetModelBySql(String sql, String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetScalarMQLBase">
            <summary>设置 Db.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetScalarToMObjectMQLBase">
            <summary>设置 Db.GetScalarToMObject(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.GetUpdateSQLEntityBase">
            <summary>设置 Db.GetUpdateSQL(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.LinkStringGet">
            <summary>设置 Db.get_LinkString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.LinkStringSetString">
            <summary>设置 Db.set_LinkString(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.PNameGet">
            <summary>设置 Db.get_PName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.PNameSetString">
            <summary>设置 Db.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.StartCacheInt32">
            <summary>设置 Db.StartCache(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.StaticConstructor">
            <summary>设置 Db.Db() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.TransactionEnabledGet">
            <summary>设置 Db.get_TransactionEnabled() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.TransactionEnabledSetBoolean">
            <summary>设置 Db.set_TransactionEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.TransactionGet">
            <summary>设置 Db.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.TransactionSetDbTransaction">
            <summary>设置 Db.set_Transaction(DbTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.UpdateEntityBase">
            <summary>设置 Db.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimDb._WhereExpression”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Fakes.ShimDb.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToOwnListOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteSqlToOwnList(String sql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Db.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.ExistOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Boolean})">
            <summary>设置 Db.Exist(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Db.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetCountSQLOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Text.StringBuilder})">
            <summary>设置 Db.GetCountSQL(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetEntityOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.MQLBase,``0})">
            <summary>设置 Db.GetEntity(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetInt32CountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Db.GetInt32Count(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Db.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetRemoveParametersSQLOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Text.StringBuilder})">
            <summary>设置 Db.GetRemoveParametersSQL(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.GetTableNameFromTableSetOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,System.String})">
            <summary>设置 Db.GetTableNameFromTableSet() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.RemoveOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,System.Int32})">
            <summary>设置 Db.Remove() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDb.AllInstances.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Db,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Db.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.AddEntityBase">
            <summary>设置 Db.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.AdoMethodGet">
            <summary>设置 Db.get_AdoMethod() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.AdoMethodSetDbAdoMethod">
            <summary>设置 Db.set_AdoMethod(DbAdoMethod value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.Close">
            <summary>设置 Db.Close() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ConnectionGet">
            <summary>设置 Db.get_Connection() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ConnectionSetDbConnection">
            <summary>设置 Db.set_Connection(DbConnection value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.CurrentSQLGet">
            <summary>设置 Db.get_CurrentSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.CurrentSQLSetString">
            <summary>设置 Db.set_CurrentSQL(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.DebugEnabledGet">
            <summary>设置 Db.get_DebugEnabled() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.DebugEnabledSetBoolean">
            <summary>设置 Db.set_DebugEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.Dispose">
            <summary>设置 Db.Dispose() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Db.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Db.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToDataSetString">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToDictionaryListString">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Db.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlWithNonQueryString">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetAddSQLEntityBase">
            <summary>设置 Db.GetAddSQL(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetDataSetMQLBase">
            <summary>设置 Db.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetDbDataReaderStringCommandType">
            <summary>设置 Db.GetDbDataReader(String commandText, CommandType commandType) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetDictionaryListMQLBase">
            <summary>设置 Db.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetDynamicListStringString">
            <summary>设置 Db.GetDynamicList(String sql, String className) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetEntityTableNameEntityBase">
            <summary>设置 Db.GetEntityTableName(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetJsonMQLBase">
            <summary>设置 Db.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetModelBySqlStringString">
            <summary>设置 Db.GetModelBySql(String sql, String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetScalarMQLBase">
            <summary>设置 Db.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetScalarToMObjectMQLBase">
            <summary>设置 Db.GetScalarToMObject(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.GetUpdateSQLEntityBase">
            <summary>设置 Db.GetUpdateSQL(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.LinkStringGet">
            <summary>设置 Db.get_LinkString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.LinkStringSetString">
            <summary>设置 Db.set_LinkString(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.PNameGet">
            <summary>设置 Db.get_PName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.PNameSetString">
            <summary>设置 Db.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.StartCacheInt32">
            <summary>设置 Db.StartCache(Int32 m) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.TransactionEnabledGet">
            <summary>设置 Db.get_TransactionEnabled() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.TransactionEnabledSetBoolean">
            <summary>设置 Db.set_TransactionEnabled(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.TransactionGet">
            <summary>设置 Db.get_Transaction() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.TransactionSetDbTransaction">
            <summary>设置 Db.set_Transaction(DbTransaction value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDb.AllInstances.UpdateEntityBase">
            <summary>设置 Db.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimDb.AllInstances._WhereExpression”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Fakes.ShimDbAdoMethod">
            <summary>Moon.Orm.DbAdoMethod 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDbAdoMethod.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDbAdoMethod.#ctor(Moon.Orm.DbAdoMethod)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDbAdoMethod.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDbAdoMethod.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.ConstructorString">
            <summary>设置 DbAdoMethod.DbAdoMethod(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateCommandBuilder">
            <summary>设置 DbAdoMethod.CreateCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateConnection">
            <summary>设置 DbAdoMethod.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateDataAdapter">
            <summary>设置 DbAdoMethod.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateDataSourceEnumerator">
            <summary>设置 DbAdoMethod.CreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateDbCommand">
            <summary>设置 DbAdoMethod.CreateDbCommand() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.CreateParameter">
            <summary>设置 DbAdoMethod.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.LinkStringGet">
            <summary>设置 DbAdoMethod.get_LinkString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.LinkStringSetString">
            <summary>设置 DbAdoMethod.set_LinkString(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateCommandBuilder">
            <summary>设置 DbAdoMethod.CreateCommandBuilder() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateConnection">
            <summary>设置 DbAdoMethod.CreateConnection() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateDataAdapter">
            <summary>设置 DbAdoMethod.CreateDataAdapter() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateDataSourceEnumerator">
            <summary>设置 DbAdoMethod.CreateDataSourceEnumerator() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateDbCommand">
            <summary>设置 DbAdoMethod.CreateDbCommand() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.CreateParameter">
            <summary>设置 DbAdoMethod.CreateParameter() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.LinkStringGet">
            <summary>设置 DbAdoMethod.get_LinkString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDbAdoMethod.AllInstances.LinkStringSetString">
            <summary>设置 DbAdoMethod.set_LinkString(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimDictionaryList">
            <summary>Moon.Orm.DictionaryList 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.#ctor(Moon.Orm.DictionaryList)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.IList)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.Dictionary{System.String,Moon.Orm.MObject}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.Dictionary{System.String,Moon.Orm.MObject}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDictionaryList.Bind(System.Collections.Generic.IList{System.Collections.Generic.Dictionary{System.String,Moon.Orm.MObject}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.Constructor">
            <summary>设置 DictionaryList.DictionaryList() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.ShowInConsole">
            <summary>设置 DictionaryList.ShowInConsole() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.ToJson">
            <summary>设置 DictionaryList.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.ToString">
            <summary>设置 DictionaryList.ToString() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimDictionaryList.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.AllInstances.ShowInConsole">
            <summary>设置 DictionaryList.ShowInConsole() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.AllInstances.ToJson">
            <summary>设置 DictionaryList.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDictionaryList.AllInstances.ToString01">
            <summary>设置 DictionaryList.ToString() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimDynamicListelper">
            <summary>Moon.Orm.DynamicListelper 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDynamicListelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDynamicListelper.#ctor(Moon.Orm.DynamicListelper)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDynamicListelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimDynamicListelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.CompileToResultsStringStringArrayString">
            <summary>设置 DynamicListelper.CompileToResults(String code, String[] strArray, String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.Constructor">
            <summary>设置 DynamicListelper.DynamicListelper() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.GenerateModelAndModelListsGetMethodCodeStringDbString">
            <summary>设置 DynamicListelper.GenerateModelAndModelListsGetMethodCode(String sql, Db db, String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.GenerateModelCodeStringDbString">
            <summary>设置 DynamicListelper.GenerateModelCode(String sql, Db db, String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimDynamicListelper.StaticConstructor">
            <summary>设置 DynamicListelper.DynamicListelper() 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimDynamicListelper._StringDb”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Fakes.ShimDynamicListelper.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimEntityBase">
            <summary>Moon.Orm.EntityBase 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.#ctor(Moon.Orm.EntityBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.CloneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 EntityBase.Clone() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.CreateEntityOf1IDataRecord``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.IDataRecord,``0})">
            <summary>设置 EntityBase.CreateEntity(IDataRecord record) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.GetPropertyValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 EntityBase.GetPropertyValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.ChangedMapGet">
            <summary>设置 EntityBase.get_ChangedMap() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.Constructor">
            <summary>设置 EntityBase.EntityBase() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.GetPrimaryKeyInfo">
            <summary>设置 EntityBase.GetPrimaryKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.GetValueMap">
            <summary>设置 EntityBase.GetValueMap() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.SetDataRecordToEntityIDataRecord">
            <summary>设置 EntityBase.SetDataRecordToEntity(IDataRecord record) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.SetPrimaryKeyValueObject">
            <summary>设置 EntityBase.SetPrimaryKeyValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.SetPropertyValueStringObject">
            <summary>设置 EntityBase.SetPropertyValue(String name, Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.ToJson">
            <summary>设置 EntityBase.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.WhereExpressionGet">
            <summary>设置 EntityBase.get_WhereExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.WhereExpressionSetWhereExpression">
            <summary>设置 EntityBase.set_WhereExpression(WhereExpression value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimEntityBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.AllInstances.CloneOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.EntityBase,``0})">
            <summary>设置 EntityBase.Clone() 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEntityBase.AllInstances.GetPropertyValueOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.EntityBase,System.String,``0})">
            <summary>设置 EntityBase.GetPropertyValue(String name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.ChangedMapGet">
            <summary>设置 EntityBase.get_ChangedMap() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.GetPrimaryKeyInfo">
            <summary>设置 EntityBase.GetPrimaryKeyInfo() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.GetValueMap">
            <summary>设置 EntityBase.GetValueMap() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.SetDataRecordToEntityIDataRecord">
            <summary>设置 EntityBase.SetDataRecordToEntity(IDataRecord record) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.SetPrimaryKeyValueObject">
            <summary>设置 EntityBase.SetPrimaryKeyValue(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.SetPropertyValueStringObject">
            <summary>设置 EntityBase.SetPropertyValue(String name, Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.ToJson">
            <summary>设置 EntityBase.ToJson() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.WhereExpressionGet">
            <summary>设置 EntityBase.get_WhereExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEntityBase.AllInstances.WhereExpressionSetWhereExpression">
            <summary>设置 EntityBase.set_WhereExpression(WhereExpression value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimEnumDescriptionAttribute">
            <summary>Moon.Orm.EnumDescriptionAttribute 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.#ctor(Moon.Orm.EnumDescriptionAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.ConstructorString">
            <summary>设置 EnumDescriptionAttribute.EnumDescriptionAttribute(String description) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.DescriptionGet">
            <summary>设置 EnumDescriptionAttribute.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.DescriptionSetString">
            <summary>设置 EnumDescriptionAttribute.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.GetEnumDescriptionEnum">
            <summary>设置 EnumDescriptionAttribute.GetEnumDescription(Enum enumSubitem) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.AllInstances.DescriptionGet">
            <summary>设置 EnumDescriptionAttribute.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimEnumDescriptionAttribute.AllInstances.DescriptionSetString">
            <summary>设置 EnumDescriptionAttribute.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimFieldAttribute">
            <summary>Moon.Orm.FieldAttribute 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldAttribute.#ctor(Moon.Orm.FieldAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.ConstructorFieldTypeString">
            <summary>设置 FieldAttribute.FieldAttribute(FieldType fieldType, String fieldName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.FieldNameGet">
            <summary>设置 FieldAttribute.get_FieldName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.FieldNameSetString">
            <summary>设置 FieldAttribute.set_FieldName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.FieldTypeGet">
            <summary>设置 FieldAttribute.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.FieldTypeSetFieldType">
            <summary>设置 FieldAttribute.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimFieldAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.AllInstances.FieldNameGet">
            <summary>设置 FieldAttribute.get_FieldName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.AllInstances.FieldNameSetString">
            <summary>设置 FieldAttribute.set_FieldName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.AllInstances.FieldTypeGet">
            <summary>设置 FieldAttribute.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldAttribute.AllInstances.FieldTypeSetFieldType">
            <summary>设置 FieldAttribute.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimFieldBase">
            <summary>Moon.Orm.FieldBase 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.#ctor(Moon.Orm.FieldBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.BetweenOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0,Moon.Orm.WhereExpression})">
            <summary>设置 FieldBase.Between(!!0 v1, !!0 v2) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.ASString">
            <summary>设置 FieldBase.AS(String Name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Avg">
            <summary>设置 FieldBase.Avg() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanFieldBase">
            <summary>设置 FieldBase.BiggerThan(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanMQLBase">
            <summary>设置 FieldBase.BiggerThan(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanObject">
            <summary>设置 FieldBase.BiggerThan(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanOrEqualFieldBase">
            <summary>设置 FieldBase.BiggerThanOrEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanOrEqualMQLBase">
            <summary>设置 FieldBase.BiggerThanOrEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.BiggerThanOrEqualObject">
            <summary>设置 FieldBase.BiggerThanOrEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.ConstructorDbTypeStringFieldTypeString">
            <summary>设置 FieldBase.FieldBase(DbType dbType, String tableName, FieldType fieldType, String name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.ContainsString">
            <summary>设置 FieldBase.Contains(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Count">
            <summary>设置 FieldBase.Count() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.DbTypeGet">
            <summary>设置 FieldBase.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.DbTypeSetDbType">
            <summary>设置 FieldBase.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.EndWithString">
            <summary>设置 FieldBase.EndWith(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.EqualFieldBase">
            <summary>设置 FieldBase.Equal(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.EqualMQLBase">
            <summary>设置 FieldBase.Equal(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.EqualObject">
            <summary>设置 FieldBase.Equal(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.ExistsMQLBase">
            <summary>设置 FieldBase.Exists(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.FieldTypeGet">
            <summary>设置 FieldBase.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.FieldTypeSetFieldType">
            <summary>设置 FieldBase.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InInt32Array">
            <summary>设置 FieldBase.In(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InInt64Array">
            <summary>设置 FieldBase.In(Int64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InMQLBase">
            <summary>设置 FieldBase.In(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InStringArray">
            <summary>设置 FieldBase.In(String[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InUInt32Array">
            <summary>设置 FieldBase.In(UInt32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.InUInt64Array">
            <summary>设置 FieldBase.In(UInt64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.IsNull">
            <summary>设置 FieldBase.IsNull() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Max">
            <summary>设置 FieldBase.Max() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Min">
            <summary>设置 FieldBase.Min() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NameGet">
            <summary>设置 FieldBase.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NameSetString">
            <summary>设置 FieldBase.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Name_Get">
            <summary>设置 FieldBase.get_Name_() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotEqualFieldBase">
            <summary>设置 FieldBase.NotEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotEqualMQLBase">
            <summary>设置 FieldBase.NotEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotEqualObject">
            <summary>设置 FieldBase.NotEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInInt32Array">
            <summary>设置 FieldBase.NotIn(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInInt64Array">
            <summary>设置 FieldBase.NotIn(Int64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInMQLBase">
            <summary>设置 FieldBase.NotIn(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInStringArray">
            <summary>设置 FieldBase.NotIn(String[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInUInt32Array">
            <summary>设置 FieldBase.NotIn(UInt32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.NotInUInt64Array">
            <summary>设置 FieldBase.NotIn(UInt64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanFieldBase">
            <summary>设置 FieldBase.SmallerThan(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanMQLBase">
            <summary>设置 FieldBase.SmallerThan(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanObject">
            <summary>设置 FieldBase.SmallerThan(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanOrEqualFieldBase">
            <summary>设置 FieldBase.SmallerThanOrEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanOrEqualMQLBase">
            <summary>设置 FieldBase.SmallerThanOrEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.SmallerThanOrEqualObject">
            <summary>设置 FieldBase.SmallerThanOrEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.StartWithString">
            <summary>设置 FieldBase.StartWith(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.Sum">
            <summary>设置 FieldBase.Sum() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.TableNameGet">
            <summary>设置 FieldBase.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.TableNameSetString">
            <summary>设置 FieldBase.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimFieldBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BetweenOf1M0M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.FieldBase,``0,``0,Moon.Orm.WhereExpression})">
            <summary>设置 FieldBase.Between(!!0 v1, !!0 v2) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.ASString">
            <summary>设置 FieldBase.AS(String Name) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Avg">
            <summary>设置 FieldBase.Avg() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanFieldBase">
            <summary>设置 FieldBase.BiggerThan(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanMQLBase">
            <summary>设置 FieldBase.BiggerThan(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanObject">
            <summary>设置 FieldBase.BiggerThan(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanOrEqualFieldBase">
            <summary>设置 FieldBase.BiggerThanOrEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanOrEqualMQLBase">
            <summary>设置 FieldBase.BiggerThanOrEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.BiggerThanOrEqualObject">
            <summary>设置 FieldBase.BiggerThanOrEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.ContainsString">
            <summary>设置 FieldBase.Contains(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Count">
            <summary>设置 FieldBase.Count() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.DbTypeGet">
            <summary>设置 FieldBase.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.DbTypeSetDbType">
            <summary>设置 FieldBase.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.EndWithString">
            <summary>设置 FieldBase.EndWith(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.EqualFieldBase">
            <summary>设置 FieldBase.Equal(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.EqualMQLBase">
            <summary>设置 FieldBase.Equal(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.EqualObject">
            <summary>设置 FieldBase.Equal(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.ExistsMQLBase">
            <summary>设置 FieldBase.Exists(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.FieldTypeGet">
            <summary>设置 FieldBase.get_FieldType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.FieldTypeSetFieldType">
            <summary>设置 FieldBase.set_FieldType(FieldType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InInt32Array">
            <summary>设置 FieldBase.In(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InInt64Array">
            <summary>设置 FieldBase.In(Int64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InMQLBase">
            <summary>设置 FieldBase.In(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InStringArray">
            <summary>设置 FieldBase.In(String[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InUInt32Array">
            <summary>设置 FieldBase.In(UInt32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.InUInt64Array">
            <summary>设置 FieldBase.In(UInt64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.IsNull">
            <summary>设置 FieldBase.IsNull() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Max">
            <summary>设置 FieldBase.Max() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Min">
            <summary>设置 FieldBase.Min() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NameGet">
            <summary>设置 FieldBase.get_Name() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NameSetString">
            <summary>设置 FieldBase.set_Name(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Name_Get">
            <summary>设置 FieldBase.get_Name_() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotEqualFieldBase">
            <summary>设置 FieldBase.NotEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotEqualMQLBase">
            <summary>设置 FieldBase.NotEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotEqualObject">
            <summary>设置 FieldBase.NotEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInInt32Array">
            <summary>设置 FieldBase.NotIn(Int32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInInt64Array">
            <summary>设置 FieldBase.NotIn(Int64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInMQLBase">
            <summary>设置 FieldBase.NotIn(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInStringArray">
            <summary>设置 FieldBase.NotIn(String[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInUInt32Array">
            <summary>设置 FieldBase.NotIn(UInt32[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.NotInUInt64Array">
            <summary>设置 FieldBase.NotIn(UInt64[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanFieldBase">
            <summary>设置 FieldBase.SmallerThan(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanMQLBase">
            <summary>设置 FieldBase.SmallerThan(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanObject">
            <summary>设置 FieldBase.SmallerThan(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanOrEqualFieldBase">
            <summary>设置 FieldBase.SmallerThanOrEqual(FieldBase field) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanOrEqualMQLBase">
            <summary>设置 FieldBase.SmallerThanOrEqual(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.SmallerThanOrEqualObject">
            <summary>设置 FieldBase.SmallerThanOrEqual(Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.StartWithString">
            <summary>设置 FieldBase.StartWith(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.Sum">
            <summary>设置 FieldBase.Sum() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.TableNameGet">
            <summary>设置 FieldBase.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimFieldBase.AllInstances.TableNameSetString">
            <summary>设置 FieldBase.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimGlobalData">
            <summary>Moon.Orm.GlobalData 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimGlobalData.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimGlobalData.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimGlobalData.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.AddDynamicListHandlerToMapStringDynamicListHandler">
            <summary>设置 GlobalData.AddDynamicListHandlerToMap(String modelName, DynamicListHandler handler) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.ExistDynamicListHandlerInMapString">
            <summary>设置 GlobalData.ExistDynamicListHandlerInMap(String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.GetHandlerMapByModelNameString">
            <summary>设置 GlobalData.GetHandlerMapByModelName(String modelName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.Initial">
            <summary>设置 GlobalData.Initial() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimGlobalData.StaticConstructor">
            <summary>设置 GlobalData.GlobalData() 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimGlobalData._”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Fakes.ShimHighJoinMQL">
            <summary>Moon.Orm.HighJoinMQL 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimHighJoinMQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimHighJoinMQL.#ctor(Moon.Orm.HighJoinMQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimHighJoinMQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimHighJoinMQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.Constructor">
            <summary>设置 HighJoinMQL.HighJoinMQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.ONWhereExpression">
            <summary>设置 HighJoinMQL.ON(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.ParametersGet">
            <summary>设置 HighJoinMQL.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.ToParametersSQL">
            <summary>设置 HighJoinMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.ToSQLExpression">
            <summary>设置 HighJoinMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.UnionAllMQLBase">
            <summary>设置 HighJoinMQL.UnionAll(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.UnionMQLBase">
            <summary>设置 HighJoinMQL.Union(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.WhereWhereExpression">
            <summary>设置 HighJoinMQL.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.ONWhereExpression">
            <summary>设置 HighJoinMQL.ON(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.ParametersGet">
            <summary>设置 HighJoinMQL.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.ToParametersSQL">
            <summary>设置 HighJoinMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.ToSQLExpression">
            <summary>设置 HighJoinMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.UnionAllMQLBase">
            <summary>设置 HighJoinMQL.UnionAll(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.UnionMQLBase">
            <summary>设置 HighJoinMQL.Union(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimHighJoinMQL.AllInstances.WhereWhereExpression">
            <summary>设置 HighJoinMQL.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimJObjectDictionary">
            <summary>Moon.Orm.JObjectDictionary 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.#ctor(Moon.Orm.JObjectDictionary)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.ICollection)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.IDictionary)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.IEnumerable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.Generic.ICollection{System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JObject}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,Newtonsoft.Json.Linq.JObject}})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Collections.Generic.IDictionary{System.String,Newtonsoft.Json.Linq.JObject})">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Runtime.Serialization.IDeserializationCallback)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJObjectDictionary.Bind(System.Runtime.Serialization.ISerializable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.Constructor">
            <summary>设置 JObjectDictionary.JObjectDictionary() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.ShowInConsole">
            <summary>设置 JObjectDictionary.ShowInConsole() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.ToString">
            <summary>设置 JObjectDictionary.ToString() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimJObjectDictionary.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.AllInstances.ShowInConsole">
            <summary>设置 JObjectDictionary.ShowInConsole() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJObjectDictionary.AllInstances.ToString01">
            <summary>设置 JObjectDictionary.ToString() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimJoinMQL">
            <summary>Moon.Orm.JoinMQL 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJoinMQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJoinMQL.#ctor(Moon.Orm.JoinMQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJoinMQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimJoinMQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.Constructor">
            <summary>设置 JoinMQL.JoinMQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.FullJoinMQLBase">
            <summary>设置 JoinMQL.FullJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.InnerJoinMQLBase">
            <summary>设置 JoinMQL.InnerJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.LeftJoinMQLBase">
            <summary>设置 JoinMQL.LeftJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.ONWhereExpression">
            <summary>设置 JoinMQL.ON(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.RightJoinMQLBase">
            <summary>设置 JoinMQL.RightJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.ToDebugSQL">
            <summary>设置 JoinMQL.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.ToParametersSQL">
            <summary>设置 JoinMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.ToSQLExpression">
            <summary>设置 JoinMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.WhereWhereExpression">
            <summary>设置 JoinMQL.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimJoinMQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.FullJoinMQLBase">
            <summary>设置 JoinMQL.FullJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.InnerJoinMQLBase">
            <summary>设置 JoinMQL.InnerJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.LeftJoinMQLBase">
            <summary>设置 JoinMQL.LeftJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.ONWhereExpression">
            <summary>设置 JoinMQL.ON(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.RightJoinMQLBase">
            <summary>设置 JoinMQL.RightJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.ToDebugSQL">
            <summary>设置 JoinMQL.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.ToParametersSQL">
            <summary>设置 JoinMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.ToSQLExpression">
            <summary>设置 JoinMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimJoinMQL.AllInstances.WhereWhereExpression">
            <summary>设置 JoinMQL.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMObject">
            <summary>Moon.Orm.MObject 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.#ctor(Moon.Orm.MObject)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.ToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0})">
            <summary>设置 MObject.To() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.Constructor">
            <summary>设置 MObject.MObject() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.IsNull">
            <summary>设置 MObject.IsNull() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.ToString">
            <summary>设置 MObject.ToString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.ValueGet">
            <summary>设置 MObject.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.ValueSetObject">
            <summary>设置 MObject.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMObject.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMObject.AllInstances.ToOf1``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MObject,``0})">
            <summary>设置 MObject.To() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.AllInstances.IsNull">
            <summary>设置 MObject.IsNull() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.AllInstances.ToString01">
            <summary>设置 MObject.ToString() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.AllInstances.ValueGet">
            <summary>设置 MObject.get_Value() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMObject.AllInstances.ValueSetObject">
            <summary>设置 MObject.set_Value(Object value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMQLBase">
            <summary>Moon.Orm.MQLBase 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMQLBase.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMQLBase.#ctor(Moon.Orm.MQLBase)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMQLBase.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMQLBase.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.Constructor">
            <summary>设置 MQLBase.MQLBase() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.CreateOneObject">
            <summary>设置 MQLBase.CreateOneObject() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.FullJoinMQLBase">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.GetWhereExpression">
            <summary>设置 MQLBase.GetWhereExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.GroupByFieldBaseArray">
            <summary>设置 MQLBase.GroupBy(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.HavingWhereExpression">
            <summary>设置 MQLBase.Having(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.InnerJoinMQLBase">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.LeftJoinMQLBase">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.PNameGet">
            <summary>设置 MQLBase.get_PName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.PNameSetString">
            <summary>设置 MQLBase.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.ParametersGet">
            <summary>设置 MQLBase.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.RightJoinMQLBase">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.SelectAll">
            <summary>设置 MQLBase.SelectAll() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.SelectAllDbTypeString">
            <summary>设置 MQLBase.SelectAll(DbType dtype, String tableName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.SelectDbTypeStringFieldBaseArray">
            <summary>设置 MQLBase.Select(DbType dtype, String tableName, FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.SelectFieldBaseArray">
            <summary>设置 MQLBase.Select(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.SelectListGet">
            <summary>设置 MQLBase.get_SelectList() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TableNameGet">
            <summary>设置 MQLBase.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TableNameSetString">
            <summary>设置 MQLBase.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.ToDebugSQL">
            <summary>设置 MQLBase.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.ToParametersSQL">
            <summary>设置 MQLBase.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.ToSQLExpression">
            <summary>设置 MQLBase.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TopCountGet">
            <summary>设置 MQLBase.get_TopCount() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TopCountSetString">
            <summary>设置 MQLBase.set_TopCount(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TopInt32">
            <summary>设置 MQLBase.Top(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.TopInt64">
            <summary>设置 MQLBase.Top(Int64 count) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.UnionAllMQLBase">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.UnionMQLBase">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.WhereWhereExpression">
            <summary>设置 MQLBase.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMQLBase.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.FullJoinMQLBase">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.GetWhereExpression">
            <summary>设置 MQLBase.GetWhereExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.GroupByFieldBaseArray">
            <summary>设置 MQLBase.GroupBy(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.HavingWhereExpression">
            <summary>设置 MQLBase.Having(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.InnerJoinMQLBase">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.LeftJoinMQLBase">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.PNameGet">
            <summary>设置 MQLBase.get_PName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.PNameSetString">
            <summary>设置 MQLBase.set_PName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.ParametersGet">
            <summary>设置 MQLBase.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.RightJoinMQLBase">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.SelectListGet">
            <summary>设置 MQLBase.get_SelectList() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TableNameGet">
            <summary>设置 MQLBase.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TableNameSetString">
            <summary>设置 MQLBase.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.ToDebugSQL">
            <summary>设置 MQLBase.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.ToParametersSQL">
            <summary>设置 MQLBase.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.ToSQLExpression">
            <summary>设置 MQLBase.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TopCountGet">
            <summary>设置 MQLBase.get_TopCount() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TopCountSetString">
            <summary>设置 MQLBase.set_TopCount(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TopInt32">
            <summary>设置 MQLBase.Top(Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.TopInt64">
            <summary>设置 MQLBase.Top(Int64 count) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.UnionAllMQLBase">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.UnionMQLBase">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMQLBase.AllInstances.WhereWhereExpression">
            <summary>设置 MQLBase.Where(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMoonCache`1">
            <summary>Moon.Orm.MoonCache`1 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonCache`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonCache`1.#ctor(Moon.Orm.MoonCache{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonCache`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonCache`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonCache`1.GetCacheBySqlOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 MoonCache`1.GetCacheBySql(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.ClearSystemAllCache">
            <summary>设置 MoonCache`1.ClearSystemAllCache() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.Constructor">
            <summary>设置 MoonCache`1.MoonCache`1() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.RemoveSqlCacheString">
            <summary>设置 MoonCache`1.RemoveSqlCache(String sql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.RemoveTableCache">
            <summary>设置 MoonCache`1.RemoveTableCache() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.SaveCacheStringObject">
            <summary>设置 MoonCache`1.SaveCache(String sql, Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonCache`1.StaticConstructor">
            <summary>设置 MoonCache`1.MoonCache`1() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMoonCache`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMoonFastInvoker`1">
            <summary>Moon.Orm.MoonFastInvoker`1 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonFastInvoker`1.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonFastInvoker`1.#ctor(Moon.Orm.MoonFastInvoker{`0})">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonFastInvoker`1.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMoonFastInvoker`1.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonFastInvoker`1.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonFastInvoker`1.Constructor">
            <summary>设置 MoonFastInvoker`1.MoonFastInvoker`1() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonFastInvoker`1.GetTFromIDataRecord">
            <summary>设置 MoonFastInvoker`1.GetTFrom(IDataRecord record) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonFastInvoker`1.SetTValueT0StringObject">
            <summary>设置 MoonFastInvoker`1.SetTValue(!0 t, String propertyName, Object value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMoonFastInvoker`1.StaticConstructor">
            <summary>设置 MoonFastInvoker`1.MoonFastInvoker`1() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMoonFastInvoker`1.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMySql">
            <summary>Moon.Orm.MySql 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.#ctor(Moon.Orm.MySql)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 MySql.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 MySql.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AddEntityBase">
            <summary>设置 MySql.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ConstructorString">
            <summary>设置 MySql.MySql(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 MySql.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 MySql.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 MySql.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.GetDataSetMQLBase">
            <summary>设置 MySql.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.GetDictionaryListMQLBase">
            <summary>设置 MySql.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.GetJsonMQLBase">
            <summary>设置 MySql.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.GetScalarMQLBase">
            <summary>设置 MySql.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.UpdateEntityBase">
            <summary>设置 MySql.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimMySql.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 MySql.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 MySql.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimMySql.AllInstances.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MySql,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 MySql.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.AddEntityBase">
            <summary>设置 MySql.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 MySql.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 MySql.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 MySql.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.GetDataSetMQLBase">
            <summary>设置 MySql.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.GetDictionaryListMQLBase">
            <summary>设置 MySql.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.GetJsonMQLBase">
            <summary>设置 MySql.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.GetScalarMQLBase">
            <summary>设置 MySql.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimMySql.AllInstances.UpdateEntityBase">
            <summary>设置 MySql.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimOracle">
            <summary>Moon.Orm.Oracle 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.#ctor(Moon.Orm.Oracle)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Oracle.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Oracle.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AddEntityBase">
            <summary>设置 Oracle.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ConstructorString">
            <summary>设置 Oracle.Oracle(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.GetDataSetMQLBase">
            <summary>设置 Oracle.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.GetDictionaryListMQLBase">
            <summary>设置 Oracle.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.GetScalarMQLBase">
            <summary>设置 Oracle.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.UpdateEntityBase">
            <summary>设置 Oracle.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimOracle.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Oracle.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Oracle.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimOracle.AllInstances.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Oracle,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Oracle.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.AddEntityBase">
            <summary>设置 Oracle.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.GetDataSetMQLBase">
            <summary>设置 Oracle.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.GetDictionaryListMQLBase">
            <summary>设置 Oracle.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.GetScalarMQLBase">
            <summary>设置 Oracle.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimOracle.AllInstances.UpdateEntityBase">
            <summary>设置 Oracle.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlServer">
            <summary>Moon.Orm.SqlServer 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.#ctor(Moon.Orm.SqlServer)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 SqlServer.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 SqlServer.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AddEntityBase">
            <summary>设置 SqlServer.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ConstructorString">
            <summary>设置 SqlServer.SqlServer(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.GetDataSetMQLBase">
            <summary>设置 SqlServer.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.GetDictionaryListMQLBase">
            <summary>设置 SqlServer.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.GetJsonMQLBase">
            <summary>设置 SqlServer.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.GetScalarMQLBase">
            <summary>设置 SqlServer.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.UpdateEntityBase">
            <summary>设置 SqlServer.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlServer.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 SqlServer.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 SqlServer.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlServer.AllInstances.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.SqlServer,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 SqlServer.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.AddEntityBase">
            <summary>设置 SqlServer.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetDataSetMQLBase">
            <summary>设置 SqlServer.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetDictionaryListMQLBase">
            <summary>设置 SqlServer.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetJsonMQLBase">
            <summary>设置 SqlServer.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.GetScalarMQLBase">
            <summary>设置 SqlServer.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlServer.AllInstances.UpdateEntityBase">
            <summary>设置 SqlServer.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlXml">
            <summary>Moon.Orm.SqlXml 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlXml.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlXml.#ctor(Moon.Orm.SqlXml)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlXml.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlXml.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.Constructor">
            <summary>设置 SqlXml.SqlXml() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.DescriptionGet">
            <summary>设置 SqlXml.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.DescriptionSetString">
            <summary>设置 SqlXml.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.IDGet">
            <summary>设置 SqlXml.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.IDSetString">
            <summary>设置 SqlXml.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.SQLGet">
            <summary>设置 SqlXml.get_SQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.SQLSetString">
            <summary>设置 SqlXml.set_SQL(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlXml.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.DescriptionGet">
            <summary>设置 SqlXml.get_Description() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.DescriptionSetString">
            <summary>设置 SqlXml.set_Description(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.IDGet">
            <summary>设置 SqlXml.get_ID() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.IDSetString">
            <summary>设置 SqlXml.set_ID(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.SQLGet">
            <summary>设置 SqlXml.get_SQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlXml.AllInstances.SQLSetString">
            <summary>设置 SqlXml.set_SQL(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlite">
            <summary>Moon.Orm.Sqlite 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.#ctor(Moon.Orm.Sqlite)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.Bind(System.IDisposable)">
            <summary>将接口的成员绑定到此填充码。</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Sqlite.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Sqlite.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AddEntityBase">
            <summary>设置 Sqlite.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ConstructorString">
            <summary>设置 Sqlite.Sqlite(String linkString) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.GetDataSetMQLBase">
            <summary>设置 Sqlite.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.GetDictionaryListMQLBase">
            <summary>设置 Sqlite.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.GetJsonMQLBase">
            <summary>设置 Sqlite.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.GetScalarMQLBase">
            <summary>设置 Sqlite.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.UpdateEntityBase">
            <summary>设置 Sqlite.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimSqlite.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.ExecuteSqlToOwnList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 Sqlite.GetCount(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 Sqlite.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimSqlite.AllInstances.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.Sqlite,Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Sqlite.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.AddEntityBase">
            <summary>设置 Sqlite.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDataSet(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToJson(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToScalar(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetDataSetMQLBase">
            <summary>设置 Sqlite.GetDataSet(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetDictionaryListMQLBase">
            <summary>设置 Sqlite.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetJsonMQLBase">
            <summary>设置 Sqlite.GetJson(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.GetScalarMQLBase">
            <summary>设置 Sqlite.GetScalar(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimSqlite.AllInstances.UpdateEntityBase">
            <summary>设置 Sqlite.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTableAttribute">
            <summary>Moon.Orm.TableAttribute 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTableAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTableAttribute.#ctor(Moon.Orm.TableAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTableAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTableAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.ConstructorStringDbType">
            <summary>设置 TableAttribute.TableAttribute(String tableName, DbType dbType) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.DbTypeGet">
            <summary>设置 TableAttribute.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.DbTypeSetDbType">
            <summary>设置 TableAttribute.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.TableNameGet">
            <summary>设置 TableAttribute.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.TableNameSetString">
            <summary>设置 TableAttribute.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTableAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.AllInstances.DbTypeGet">
            <summary>设置 TableAttribute.get_DbType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.AllInstances.DbTypeSetDbType">
            <summary>设置 TableAttribute.set_DbType(DbType value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.AllInstances.TableNameGet">
            <summary>设置 TableAttribute.get_TableName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTableAttribute.AllInstances.TableNameSetString">
            <summary>设置 TableAttribute.set_TableName(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute">
            <summary>Moon.Orm.TablesPrimaryKeyAttribute 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.#ctor(Moon.Orm.TablesPrimaryKeyAttribute)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.PrimaryFieldNameGet">
            <summary>设置 TablesPrimaryKeyAttribute.get_PrimaryFieldName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.PrimaryFieldNameSetString">
            <summary>设置 TablesPrimaryKeyAttribute.set_PrimaryFieldName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.PrimaryKeyTypeGet">
            <summary>设置 TablesPrimaryKeyAttribute.get_PrimaryKeyType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.PrimaryKeyTypeSetPrimaryKeyType">
            <summary>设置 TablesPrimaryKeyAttribute.set_PrimaryKeyType(PrimaryKeyType value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.AllInstances.PrimaryFieldNameGet">
            <summary>设置 TablesPrimaryKeyAttribute.get_PrimaryFieldName() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.AllInstances.PrimaryFieldNameSetString">
            <summary>设置 TablesPrimaryKeyAttribute.set_PrimaryFieldName(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.AllInstances.PrimaryKeyTypeGet">
            <summary>设置 TablesPrimaryKeyAttribute.get_PrimaryKeyType() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTablesPrimaryKeyAttribute.AllInstances.PrimaryKeyTypeSetPrimaryKeyType">
            <summary>设置 TablesPrimaryKeyAttribute.set_PrimaryKeyType(PrimaryKeyType value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTypeUtil">
            <summary>Moon.Orm.TypeUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTypeUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTypeUtil.#ctor(Moon.Orm.TypeUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTypeUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimTypeUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTypeUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimTypeUtil.Constructor">
            <summary>设置 TypeUtil.TypeUtil() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimTypeUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimUnionMQL">
            <summary>Moon.Orm.UnionMQL 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimUnionMQL.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimUnionMQL.#ctor(Moon.Orm.UnionMQL)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimUnionMQL.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimUnionMQL.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.Constructor">
            <summary>设置 UnionMQL.UnionMQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.IsAllGet">
            <summary>设置 UnionMQL.get_IsAll() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.IsAllSetBoolean">
            <summary>设置 UnionMQL.set_IsAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.ParametersGet">
            <summary>设置 UnionMQL.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.ToDebugSQL">
            <summary>设置 UnionMQL.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.ToParametersSQL">
            <summary>设置 UnionMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.ToSQLExpression">
            <summary>设置 UnionMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimUnionMQL.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.IsAllGet">
            <summary>设置 UnionMQL.get_IsAll() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.IsAllSetBoolean">
            <summary>设置 UnionMQL.set_IsAll(Boolean value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.ParametersGet">
            <summary>设置 UnionMQL.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.ToDebugSQL">
            <summary>设置 UnionMQL.ToDebugSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.ToParametersSQL">
            <summary>设置 UnionMQL.ToParametersSQL() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimUnionMQL.AllInstances.ToSQLExpression">
            <summary>设置 UnionMQL.ToSQLExpression() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimWhereExpression">
            <summary>Moon.Orm.WhereExpression 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimWhereExpression.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimWhereExpression.#ctor(Moon.Orm.WhereExpression)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimWhereExpression.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimWhereExpression.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AndWhereExpression">
            <summary>设置 WhereExpression.And(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AndWithBracketsWhereExpression">
            <summary>设置 WhereExpression.AndWithBrackets(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.Constructor">
            <summary>设置 WhereExpression.WhereExpression() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.OrWhereExpression">
            <summary>设置 WhereExpression.Or(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.OrWithBracketsWhereExpression">
            <summary>设置 WhereExpression.OrWithBrackets(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.ParametersGet">
            <summary>设置 WhereExpression.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.ParametersSetListOfObject">
            <summary>设置 WhereExpression.set_Parameters(List`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.WhereContentGet">
            <summary>设置 WhereExpression.get_WhereContent() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.WhereContentSetString">
            <summary>设置 WhereExpression.set_WhereContent(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimWhereExpression.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.AndWhereExpression">
            <summary>设置 WhereExpression.And(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.AndWithBracketsWhereExpression">
            <summary>设置 WhereExpression.AndWithBrackets(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.OrWhereExpression">
            <summary>设置 WhereExpression.Or(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.OrWithBracketsWhereExpression">
            <summary>设置 WhereExpression.OrWithBrackets(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.ParametersGet">
            <summary>设置 WhereExpression.get_Parameters() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.ParametersSetListOfObject">
            <summary>设置 WhereExpression.set_Parameters(List`1&lt;Object&gt; value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.WhereContentGet">
            <summary>设置 WhereExpression.get_WhereContent() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimWhereExpression.AllInstances.WhereContentSetString">
            <summary>设置 WhereExpression.set_WhereContent(String value) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.ShimXmlHelper">
            <summary>Moon.Orm.XmlHelper 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimXmlHelper.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimXmlHelper.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.ShimXmlHelper.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimXmlHelper.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimXmlHelper.GetSqlByIDString">
            <summary>设置 XmlHelper.GetSqlByID(String id) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimXmlHelper.GetSqlXmlByIDString">
            <summary>设置 XmlHelper.GetSqlXmlByID(String id) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.ShimXmlHelper.StaticConstructor">
            <summary>设置 XmlHelper.XmlHelper() 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimXmlHelper._”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Fakes.ShimXmlHelper._String”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Fakes.StubDb">
            <summary>Moon.Orm.Db 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.Add(Moon.Orm.EntityBase)">
            <summary>设置 Db.Add(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.AddEntityBase">
            <summary>设置 Db.Add(EntityBase entity) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteProToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Db.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Db.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteProToOwnList``1(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Db.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteProToOwnList(String procName, DbParameter[] parameters) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteProWithNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Db.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Db.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToDataSet(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDataSet(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToDictionaryList(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Db.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToJson(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToOwnList``1(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToOwnList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteSqlToOwnList(String sql, Object[] values) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlToScalar(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToScalar(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Db.ExecuteSqlToScalar(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Db.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetCount``1(Moon.Orm.WhereExpression)">
            <summary>设置 Db.GetCount(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 GetCount(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetDataSet(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetDataSet(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetDataSetMQLBase">
            <summary>设置 Db.GetDataSet(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetDictionaryList(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetDictionaryList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetDictionaryListMQLBase">
            <summary>设置 Db.GetDictionaryList(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetEntities``1(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetEntities(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetEntities(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetJson(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetJson(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetJsonMQLBase">
            <summary>设置 Db.GetJson(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetOwnList``1(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetOwnList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetOwnList(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToDataSet(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToDataSet(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetPagerToDataSetMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Db.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetPagerToDataSetStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Db.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToDictionaryList(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToDictionaryList(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetPagerToDictionaryListMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Db.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetPagerToDictionaryListStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Db.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToOwnList``1(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToOwnList``1(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Db.GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToOwnListOf1MQLBaseInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out1Out2Func7{Moon.Orm.MQLBase,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetPagerToOwnListOf1StringObjectArrayInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out2Out3Func8{System.String,System.Object[],System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.GetScalar(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetScalar(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.GetScalarMQLBase">
            <summary>设置 Db.GetScalar(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.InitializeStub">
            <summary>初始化 type StubDb 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.Remove``1(Moon.Orm.WhereExpression)">
            <summary>设置 Db.Remove(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Remove(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDb.Update(Moon.Orm.EntityBase)">
            <summary>设置 Db.Update(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDb.UpdateEntityBase">
            <summary>设置 Db.Update(EntityBase entity) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDb.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDb.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDb.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubDbAdoMethod">
            <summary>Moon.Orm.DbAdoMethod 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateCommandBuilder">
            <summary>设置 DbAdoMethod.CreateCommandBuilder() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateCommandBuilder01">
            <summary>设置 DbAdoMethod.CreateCommandBuilder() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateConnection">
            <summary>设置 DbAdoMethod.CreateConnection() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateConnection01">
            <summary>设置 DbAdoMethod.CreateConnection() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateDataAdapter">
            <summary>设置 DbAdoMethod.CreateDataAdapter() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateDataAdapter01">
            <summary>设置 DbAdoMethod.CreateDataAdapter() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateDataSourceEnumerator">
            <summary>设置 DbAdoMethod.CreateDataSourceEnumerator() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateDataSourceEnumerator01">
            <summary>设置 DbAdoMethod.CreateDataSourceEnumerator() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateDbCommand">
            <summary>设置 DbAdoMethod.CreateDbCommand() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateDbCommand01">
            <summary>设置 DbAdoMethod.CreateDbCommand() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.CreateParameter">
            <summary>设置 DbAdoMethod.CreateParameter() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDbAdoMethod.CreateParameter01">
            <summary>设置 DbAdoMethod.CreateParameter() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDbAdoMethod.InitializeStub">
            <summary>初始化 type StubDbAdoMethod 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDbAdoMethod.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDbAdoMethod.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDbAdoMethod.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubDictionaryList">
            <summary>Moon.Orm.DictionaryList 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDictionaryList.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDictionaryList.InitializeStub">
            <summary>初始化 type StubDictionaryList 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDictionaryList.ToJson">
            <summary>设置 DictionaryList.ToJson() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDictionaryList.ToJson01">
            <summary>设置 DictionaryList.ToJson() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDictionaryList.ToString">
            <summary>设置 DictionaryList.ToString() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubDictionaryList.ToString01">
            <summary>设置 DictionaryList.ToString() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDictionaryList.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDictionaryList.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDictionaryList.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubDynamicListelper">
            <summary>Moon.Orm.DynamicListelper 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDynamicListelper.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubDynamicListelper.InitializeStub">
            <summary>初始化 type StubDynamicListelper 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDynamicListelper.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDynamicListelper.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubDynamicListelper.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubEntityBase">
            <summary>Moon.Orm.EntityBase 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEntityBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEntityBase.InitializeStub">
            <summary>初始化 type StubEntityBase 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEntityBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEntityBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEntityBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubEnumDescriptionAttribute">
            <summary>Moon.Orm.EnumDescriptionAttribute 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubEnumDescriptionAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubEnumDescriptionAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.InitializeStub">
            <summary>初始化 type StubEnumDescriptionAttribute 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubEnumDescriptionAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubEnumDescriptionAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubEnumDescriptionAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubEnumDescriptionAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEnumDescriptionAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEnumDescriptionAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEnumDescriptionAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubEnumDescriptionAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubFieldAttribute">
            <summary>Moon.Orm.FieldAttribute 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.#ctor(Moon.Orm.FieldType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubFieldAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubFieldAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.InitializeStub">
            <summary>初始化 type StubFieldAttribute 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubFieldAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubFieldAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubFieldAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubFieldBase">
            <summary>Moon.Orm.FieldBase 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldBase.#ctor(Moon.Orm.DbType,System.String,Moon.Orm.FieldType,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubFieldBase.InitializeStub">
            <summary>初始化 type StubFieldBase 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubFieldBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubHighJoinMQL">
            <summary>Moon.Orm.HighJoinMQL 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.FullJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.FullJoinMQLBase">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.InitializeStub">
            <summary>初始化 type StubHighJoinMQL 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.InnerJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.InnerJoinMQLBase">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.LeftJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.LeftJoinMQLBase">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.OrderByASC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.OrderByDESC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.ParametersGet">
            <summary>设置 HighJoinMQL.get_Parameters() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.RightJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.RightJoinMQLBase">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.ToDebugSQL">
            <summary>设置 MQLBase.ToDebugSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.ToDebugSQL01">
            <summary>设置 MQLBase.ToDebugSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.ToParametersSQL">
            <summary>设置 HighJoinMQL.ToParametersSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.ToParametersSQL01">
            <summary>设置 HighJoinMQL.ToParametersSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.ToSQLExpression">
            <summary>设置 HighJoinMQL.ToSQLExpression() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.ToSQLExpression01">
            <summary>设置 HighJoinMQL.ToSQLExpression() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.ToSQLExpressionStringBuilder01">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.Union(Moon.Orm.MQLBase)">
            <summary>设置 HighJoinMQL.Union(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubHighJoinMQL.UnionAll(Moon.Orm.MQLBase)">
            <summary>设置 HighJoinMQL.UnionAll(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.UnionAllMQLBase">
            <summary>设置 HighJoinMQL.UnionAll(MQLBase mql) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubHighJoinMQL.UnionMQLBase">
            <summary>设置 HighJoinMQL.Union(MQLBase mql) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubHighJoinMQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubHighJoinMQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubHighJoinMQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubHighJoinMQL.Parameters">
            <summary>设置 HighJoinMQL.get_Parameters() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubJObjectDictionary">
            <summary>Moon.Orm.JObjectDictionary 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJObjectDictionary.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJObjectDictionary.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJObjectDictionary.GetObjectDataSerializationInfoStreamingContext">
            <summary>设置 Dictionary`2.GetObjectData(SerializationInfo info, StreamingContext context) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJObjectDictionary.InitializeStub">
            <summary>初始化 type StubJObjectDictionary 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJObjectDictionary.OnDeserialization(System.Object)">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJObjectDictionary.OnDeserializationObject">
            <summary>设置 Dictionary`2.OnDeserialization(Object sender) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJObjectDictionary.ToString">
            <summary>设置 JObjectDictionary.ToString() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJObjectDictionary.ToString01">
            <summary>设置 JObjectDictionary.ToString() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJObjectDictionary.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJObjectDictionary.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJObjectDictionary.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubJoinMQL">
            <summary>Moon.Orm.JoinMQL 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.InitializeStub">
            <summary>初始化 type StubJoinMQL 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.OrderByASC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.OrderByDESC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.ParametersGet">
            <summary>设置 MQLBase.get_Parameters() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.ToDebugSQL">
            <summary>设置 JoinMQL.ToDebugSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.ToDebugSQL01">
            <summary>设置 JoinMQL.ToDebugSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.ToParametersSQL">
            <summary>设置 JoinMQL.ToParametersSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.ToParametersSQL01">
            <summary>设置 JoinMQL.ToParametersSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.ToSQLExpression">
            <summary>设置 JoinMQL.ToSQLExpression() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.ToSQLExpression01">
            <summary>设置 JoinMQL.ToSQLExpression() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.ToSQLExpressionStringBuilder01">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.Union(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubJoinMQL.UnionAll(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.UnionAllMQLBase">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubJoinMQL.UnionMQLBase">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJoinMQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJoinMQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJoinMQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubJoinMQL.Parameters">
            <summary>设置 MQLBase.get_Parameters() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubMObject">
            <summary>Moon.Orm.MObject 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMObject.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMObject.InitializeStub">
            <summary>初始化 type StubMObject 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMObject.ToString">
            <summary>设置 MObject.ToString() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMObject.ToString01">
            <summary>设置 MObject.ToString() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMObject.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMObject.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMObject.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubMQLBase">
            <summary>Moon.Orm.MQLBase 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.FullJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.FullJoinMQLBase">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.InitializeStub">
            <summary>初始化 type StubMQLBase 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.InnerJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.InnerJoinMQLBase">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.LeftJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.LeftJoinMQLBase">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.OrderByASC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.OrderByDESC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.ParametersGet">
            <summary>设置 MQLBase.get_Parameters() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.RightJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.RightJoinMQLBase">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.ToDebugSQL">
            <summary>设置 MQLBase.ToDebugSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.ToDebugSQL01">
            <summary>设置 MQLBase.ToDebugSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.ToParametersSQL">
            <summary>设置 MQLBase.ToParametersSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.ToParametersSQL01">
            <summary>设置 MQLBase.ToParametersSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.ToSQLExpression">
            <summary>设置 MQLBase.ToSQLExpression() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.ToSQLExpression01">
            <summary>设置 MQLBase.ToSQLExpression() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.ToSQLExpressionStringBuilder01">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.Union(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMQLBase.UnionAll(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.UnionAllMQLBase">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMQLBase.UnionMQLBase">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMQLBase.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMQLBase.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMQLBase.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMQLBase.Parameters">
            <summary>设置 MQLBase.get_Parameters() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubMoonCache`1">
            <summary>Moon.Orm.MoonCache`1 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMoonCache`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMoonCache`1.InitializeStub">
            <summary>初始化 type StubMoonCache 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonCache`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonCache`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonCache`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubMoonFastInvoker`1">
            <summary>Moon.Orm.MoonFastInvoker`1 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMoonFastInvoker`1.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMoonFastInvoker`1.InitializeStub">
            <summary>初始化 type StubMoonFastInvoker 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonFastInvoker`1.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonFastInvoker`1.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMoonFastInvoker`1.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubMySql">
            <summary>Moon.Orm.MySql 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.Add(Moon.Orm.EntityBase)">
            <summary>设置 MySql.Add(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.AddEntityBase">
            <summary>设置 MySql.Add(EntityBase entity) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteProToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 MySql.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 MySql.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteProToOwnList``1(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 MySql.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteProToOwnList(String procName, DbParameter[] parameters) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteProWithNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 MySql.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 MySql.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToDataSet(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlToDataSet(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDataSet(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToDictionaryList(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToJson(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlToJson(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToJson(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToOwnList``1(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlToOwnList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteSqlToOwnList(String sql, Object[] values) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlToScalar(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlToScalar(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 MySql.ExecuteSqlToScalar(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>设置 MySql.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 MySql.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetCount``1(Moon.Orm.WhereExpression)">
            <summary>设置 MySql.GetCount(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 GetCount(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetDataSet(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetDataSet(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetDataSetMQLBase">
            <summary>设置 MySql.GetDataSet(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetDictionaryList(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetDictionaryList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetDictionaryListMQLBase">
            <summary>设置 MySql.GetDictionaryList(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetEntities``1(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetEntities(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetEntities(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetJson(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetJson(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetJsonMQLBase">
            <summary>设置 MySql.GetJson(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetOwnList``1(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetOwnList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetOwnList(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToDataSet(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToDataSet(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetPagerToDataSetMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 MySql.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetPagerToDataSetStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 MySql.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToDictionaryList(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToDictionaryList(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetPagerToDictionaryListMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 MySql.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetPagerToDictionaryListStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 MySql.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToOwnList``1(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToOwnList``1(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 MySql.GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToOwnListOf1MQLBaseInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out1Out2Func7{Moon.Orm.MQLBase,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetPagerToOwnListOf1StringObjectArrayInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out2Out3Func8{System.String,System.Object[],System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.GetScalar(Moon.Orm.MQLBase)">
            <summary>设置 MySql.GetScalar(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.GetScalarMQLBase">
            <summary>设置 MySql.GetScalar(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.InitializeStub">
            <summary>初始化 type StubMySql 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.Remove``1(Moon.Orm.WhereExpression)">
            <summary>设置 MySql.Remove(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Remove(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubMySql.Update(Moon.Orm.EntityBase)">
            <summary>设置 MySql.Update(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubMySql.UpdateEntityBase">
            <summary>设置 MySql.Update(EntityBase entity) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMySql.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMySql.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubMySql.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubOracle">
            <summary>Moon.Orm.Oracle 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.Add(Moon.Orm.EntityBase)">
            <summary>设置 Oracle.Add(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.AddEntityBase">
            <summary>设置 Oracle.Add(EntityBase entity) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteProToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Oracle.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteProToOwnList``1(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Oracle.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteProToOwnList(String procName, DbParameter[] parameters) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteProWithNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Oracle.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Oracle.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToDataSet(System.String,System.Object[])">
            <summary>设置 Oracle.ExecuteSqlToDataSet(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDataSet(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToDictionaryList(System.String,System.Object[])">
            <summary>设置 Oracle.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToJson(System.String,System.Object[])">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Db.ExecuteSqlToJson(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToOwnList``1(System.String,System.Object[])">
            <summary>设置 Oracle.ExecuteSqlToOwnList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteSqlToOwnList(String sql, Object[] values) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlToScalar(System.String,System.Object[])">
            <summary>设置 Oracle.ExecuteSqlToScalar(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlToScalar(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>设置 Oracle.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Oracle.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetCount``1(Moon.Orm.WhereExpression)">
            <summary>设置 Oracle.GetCount(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 GetCount(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetDataSet(Moon.Orm.MQLBase)">
            <summary>设置 Oracle.GetDataSet(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetDataSetMQLBase">
            <summary>设置 Oracle.GetDataSet(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetDictionaryList(Moon.Orm.MQLBase)">
            <summary>设置 Oracle.GetDictionaryList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetDictionaryListMQLBase">
            <summary>设置 Oracle.GetDictionaryList(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetEntities``1(Moon.Orm.MQLBase)">
            <summary>设置 Oracle.GetEntities(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetEntities(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetJson(Moon.Orm.MQLBase)">
            <summary>设置 Db.GetJson(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetJsonMQLBase">
            <summary>设置 Db.GetJson(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetOwnList``1(Moon.Orm.MQLBase)">
            <summary>设置 Oracle.GetOwnList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetOwnList(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToDataSet(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToDataSet(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetPagerToDataSetMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Oracle.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetPagerToDataSetStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Oracle.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToDictionaryList(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToDictionaryList(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetPagerToDictionaryListMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Oracle.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetPagerToDictionaryListStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Oracle.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToOwnList``1(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToOwnList``1(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Oracle.GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToOwnListOf1MQLBaseInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out1Out2Func7{Moon.Orm.MQLBase,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetPagerToOwnListOf1StringObjectArrayInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out2Out3Func8{System.String,System.Object[],System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.GetScalar(Moon.Orm.MQLBase)">
            <summary>设置 Oracle.GetScalar(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.GetScalarMQLBase">
            <summary>设置 Oracle.GetScalar(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.InitializeStub">
            <summary>初始化 type StubOracle 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.Remove``1(Moon.Orm.WhereExpression)">
            <summary>设置 Oracle.Remove(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Remove(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubOracle.Update(Moon.Orm.EntityBase)">
            <summary>设置 Oracle.Update(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubOracle.UpdateEntityBase">
            <summary>设置 Oracle.Update(EntityBase entity) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubOracle.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubOracle.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubOracle.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubSqlServer">
            <summary>Moon.Orm.SqlServer 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.Add(Moon.Orm.EntityBase)">
            <summary>设置 SqlServer.Add(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.AddEntityBase">
            <summary>设置 SqlServer.Add(EntityBase entity) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteProToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 SqlServer.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteProToOwnList``1(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 SqlServer.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteProToOwnList(String procName, DbParameter[] parameters) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteProWithNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 SqlServer.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 SqlServer.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToDataSet(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlToDataSet(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDataSet(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToDictionaryList(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToJson(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlToJson(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToJson(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToOwnList``1(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlToOwnList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteSqlToOwnList(String sql, Object[] values) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToScalar(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlToScalar(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlToScalar(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>设置 SqlServer.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 SqlServer.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetCount``1(Moon.Orm.WhereExpression)">
            <summary>设置 SqlServer.GetCount(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 GetCount(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetDataSet(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetDataSet(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetDataSetMQLBase">
            <summary>设置 SqlServer.GetDataSet(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetDictionaryList(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetDictionaryList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetDictionaryListMQLBase">
            <summary>设置 SqlServer.GetDictionaryList(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetEntities``1(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetEntities(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetEntities(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetJson(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetJson(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetJsonMQLBase">
            <summary>设置 SqlServer.GetJson(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetOwnList``1(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetOwnList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetOwnList(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToDataSet(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToDataSet(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetPagerToDataSetMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 SqlServer.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetPagerToDataSetStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 SqlServer.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToDictionaryList(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToDictionaryList(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetPagerToDictionaryListMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 SqlServer.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetPagerToDictionaryListStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 SqlServer.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToOwnList``1(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToOwnList``1(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 SqlServer.GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToOwnListOf1MQLBaseInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out1Out2Func7{Moon.Orm.MQLBase,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetPagerToOwnListOf1StringObjectArrayInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out2Out3Func8{System.String,System.Object[],System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.GetScalar(Moon.Orm.MQLBase)">
            <summary>设置 SqlServer.GetScalar(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.GetScalarMQLBase">
            <summary>设置 SqlServer.GetScalar(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.InitializeStub">
            <summary>初始化 type StubSqlServer 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.Remove``1(Moon.Orm.WhereExpression)">
            <summary>设置 SqlServer.Remove(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Remove(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlServer.Update(Moon.Orm.EntityBase)">
            <summary>设置 SqlServer.Update(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlServer.UpdateEntityBase">
            <summary>设置 SqlServer.Update(EntityBase entity) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlServer.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlServer.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlServer.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubSqlXml">
            <summary>Moon.Orm.SqlXml 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlXml.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlXml.InitializeStub">
            <summary>初始化 type StubSqlXml 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlXml.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlXml.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlXml.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubSqlite">
            <summary>Moon.Orm.Sqlite 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.#ctor(System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.Add(Moon.Orm.EntityBase)">
            <summary>设置 Sqlite.Add(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.AddEntityBase">
            <summary>设置 Sqlite.Add(EntityBase entity) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteProToDataSet(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Sqlite.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteProToDataSetStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProToDataSet(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteProToOwnList``1(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Sqlite.ExecuteProToOwnList(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteProToOwnListOf1StringDbParameterArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Data.Common.DbParameter[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteProToOwnList(String procName, DbParameter[] parameters) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteProWithNonQuery(System.String,System.Data.Common.DbParameter[])">
            <summary>设置 Sqlite.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteProWithNonQueryStringDbParameterArray">
            <summary>设置 Sqlite.ExecuteProWithNonQuery(String procName, DbParameter[] parameters) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToDataSet(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlToDataSet(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToDataSetStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDataSet(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToDictionaryList(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToDictionaryListStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToDictionaryList(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToJson(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlToJson(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToJsonStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToJson(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToOwnList``1(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlToOwnList(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToOwnListOf1StringObjectArray``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Object[],System.Collections.Generic.List{``0}})">
            <summary>设置 ExecuteSqlToOwnList(String sql, Object[] values) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToScalar(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlToScalar(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteSqlToScalarStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlToScalar(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.ExecuteSqlWithNonQuery(System.String,System.Object[])">
            <summary>设置 Sqlite.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.ExecuteSqlWithNonQueryStringObjectArray">
            <summary>设置 Sqlite.ExecuteSqlWithNonQuery(String sql, Object[] values) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetCount``1(Moon.Orm.WhereExpression)">
            <summary>设置 Sqlite.GetCount(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetCountOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int64})">
            <summary>设置 GetCount(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetDataSet(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetDataSet(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetDataSetMQLBase">
            <summary>设置 Sqlite.GetDataSet(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetDictionaryList(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetDictionaryList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetDictionaryListMQLBase">
            <summary>设置 Sqlite.GetDictionaryList(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetEntities``1(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetEntities(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetEntities(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetJson(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetJson(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetJsonMQLBase">
            <summary>设置 Sqlite.GetJson(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetOwnList``1(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetOwnList(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 GetOwnList(MQLBase mql) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToDataSet(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToDataSet(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetPagerToDataSetMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Sqlite.GetPagerToDataSet(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetPagerToDataSetStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Sqlite.GetPagerToDataSet(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToDictionaryList(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToDictionaryList(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetPagerToDictionaryListMQLBaseInt32OutInt32OutInt32Int32String">
            <summary>设置 Sqlite.GetPagerToDictionaryList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetPagerToDictionaryListStringObjectArrayInt32OutInt32OutInt32Int32String">
            <summary>设置 Sqlite.GetPagerToDictionaryList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToOwnList``1(Moon.Orm.MQLBase,System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToOwnList``1(System.String,System.Object[],System.Int32@,System.Int32@,System.Int32,System.Int32,System.String)">
            <summary>设置 Sqlite.GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToOwnListOf1MQLBaseInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out1Out2Func7{Moon.Orm.MQLBase,System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(MQLBase mql, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetPagerToOwnListOf1StringObjectArrayInt32OutInt32OutInt32Int32String``1(Microsoft.QualityTools.Testing.Fakes.Delegates.MoonOrmDelegates.Out2Out3Func8{System.String,System.Object[],System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 GetPagerToOwnList(String sql, Object[] parameters, Int32&amp; sumPageCount, Int32&amp; sumDataCount, Int32 pageIndex, Int32 onePageDataCount, String oneOrderbyFieldName) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.GetScalar(Moon.Orm.MQLBase)">
            <summary>设置 Sqlite.GetScalar(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.GetScalarMQLBase">
            <summary>设置 Sqlite.GetScalar(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.InitializeStub">
            <summary>初始化 type StubSqlite 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.Remove``1(Moon.Orm.WhereExpression)">
            <summary>设置 Sqlite.Remove(WhereExpression expression) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 Remove(WhereExpression expression) 的存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubSqlite.Update(Moon.Orm.EntityBase)">
            <summary>设置 Sqlite.Update(EntityBase entity) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubSqlite.UpdateEntityBase">
            <summary>设置 Sqlite.Update(EntityBase entity) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlite.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlite.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubSqlite.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubTableAttribute">
            <summary>Moon.Orm.TableAttribute 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.#ctor(System.String,Moon.Orm.DbType)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTableAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTableAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.InitializeStub">
            <summary>初始化 type StubTableAttribute 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTableAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTableAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTableAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTableAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTableAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTableAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTableAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTableAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute">
            <summary>Moon.Orm.TablesPrimaryKeyAttribute 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.#ctor(Moon.Orm.PrimaryKeyType,System.Type,System.String)">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.Equals(System.Object)">
            <summary>设置 Attribute.Equals(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.EqualsObject">
            <summary>设置 Attribute.Equals(Object obj) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.GetHashCode">
            <summary>设置 Attribute.GetHashCode() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.GetHashCode01">
            <summary>设置 Attribute.GetHashCode() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.InitializeStub">
            <summary>初始化 type StubTablesPrimaryKeyAttribute 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.IsDefaultAttribute">
            <summary>设置 Attribute.IsDefaultAttribute() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.IsDefaultAttribute01">
            <summary>设置 Attribute.IsDefaultAttribute() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.Match(System.Object)">
            <summary>设置 Attribute.Match(Object obj) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.MatchObject">
            <summary>设置 Attribute.Match(Object obj) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.TypeIdGet">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTablesPrimaryKeyAttribute.TypeId">
            <summary>设置 Attribute.get_TypeId() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubTypeUtil">
            <summary>Moon.Orm.TypeUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTypeUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubTypeUtil.InitializeStub">
            <summary>初始化 type StubTypeUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTypeUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTypeUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubTypeUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubUnionMQL">
            <summary>Moon.Orm.UnionMQL 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.FullJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.FullJoinMQLBase">
            <summary>设置 MQLBase.FullJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.InitializeStub">
            <summary>初始化 type StubUnionMQL 的新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.InnerJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.InnerJoinMQLBase">
            <summary>设置 MQLBase.InnerJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.LeftJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.LeftJoinMQLBase">
            <summary>设置 MQLBase.LeftJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.OrderByASC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.OrderByASCFieldBaseArray">
            <summary>设置 MQLBase.OrderByASC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.OrderByDESC(Moon.Orm.FieldBase[])">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.OrderByDESCFieldBaseArray">
            <summary>设置 MQLBase.OrderByDESC(FieldBase[] fields) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.ParametersGet">
            <summary>设置 UnionMQL.get_Parameters() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.RightJoin(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.RightJoinMQLBase">
            <summary>设置 MQLBase.RightJoin(MQLBase mql) 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.ToDebugSQL">
            <summary>设置 UnionMQL.ToDebugSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.ToDebugSQL01">
            <summary>设置 UnionMQL.ToDebugSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.ToParametersSQL">
            <summary>设置 UnionMQL.ToParametersSQL() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.ToParametersSQL01">
            <summary>设置 UnionMQL.ToParametersSQL() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.ToSQLExpression">
            <summary>设置 UnionMQL.ToSQLExpression() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.ToSQLExpression01">
            <summary>设置 UnionMQL.ToSQLExpression() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.ToSQLExpressionStringBuilder">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.ToSQLExpressionStringBuilder01">
            <summary>设置 MQLBase.ToSQLExpressionStringBuilder() 的 stub</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.Union(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 存根</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubUnionMQL.UnionAll(Moon.Orm.MQLBase)">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 存根</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.UnionAllMQLBase">
            <summary>设置 MQLBase.UnionAll(MQLBase mql) 的 stub</summary>
        </member>
        <member name="F:Moon.Orm.Fakes.StubUnionMQL.UnionMQLBase">
            <summary>设置 MQLBase.Union(MQLBase mql) 的 stub</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubUnionMQL.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubUnionMQL.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubUnionMQL.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubUnionMQL.Parameters">
            <summary>设置 UnionMQL.get_Parameters() 的 stub</summary>
        </member>
        <member name="T:Moon.Orm.Fakes.StubWhereExpression">
            <summary>Moon.Orm.WhereExpression 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubWhereExpression.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Fakes.StubWhereExpression.InitializeStub">
            <summary>初始化 type StubWhereExpression 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubWhereExpression.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubWhereExpression.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Fakes.StubWhereExpression.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimCloneUtil">
            <summary>Moon.Orm.Util.CloneUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.#ctor(Moon.Orm.Util.CloneUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.CloneEntityBaseObjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>设置 CloneUtil.CloneEntityBaseObject(!!0 obj) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.CloneOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>设置 CloneUtil.Clone(!!0 obj) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimCloneUtil.CloneSerializableObjectOf1M0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{``0,``0})">
            <summary>设置 CloneUtil.CloneSerializableObject(!!0 obj) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimCloneUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimCloneUtil.Constructor">
            <summary>设置 CloneUtil.CloneUtil() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimCloneUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimDataTableUtil">
            <summary>Moon.Orm.Util.DataTableUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDataTableUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDataTableUtil.#ctor(Moon.Orm.Util.DataTableUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDataTableUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDataTableUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDataTableUtil.ConvertDataTableToListOf1DataTable``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Data.DataTable,System.Collections.Generic.List{``0}})">
            <summary>设置 DataTableUtil.ConvertDataTableToList(DataTable dt) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDataTableUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDataTableUtil.Constructor">
            <summary>设置 DataTableUtil.DataTableUtil() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimDataTableUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimDbUtil">
            <summary>Moon.Orm.Util.DbUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.GetEntitiesOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 DbUtil.GetEntities(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.GetEntityOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,``0})">
            <summary>设置 DbUtil.GetEntity(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.GetOwnListOf1MQLBase``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.MQLBase,System.Collections.Generic.List{``0}})">
            <summary>设置 DbUtil.GetOwnList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimDbUtil.RemoveOf1WhereExpression``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Moon.Orm.WhereExpression,System.Int32})">
            <summary>设置 DbUtil.Remove(WhereExpression expression) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.AddEntityBase">
            <summary>设置 DbUtil.Add(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.GetDictionaryListMQLBase">
            <summary>设置 DbUtil.GetDictionaryList(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.GetJSONMQLBase">
            <summary>设置 DbUtil.GetJSON(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.GetScalarToMObjectMQLBase">
            <summary>设置 DbUtil.GetScalarToMObject(MQLBase mql) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimDbUtil.UpdateEntityBase">
            <summary>设置 DbUtil.Update(EntityBase entity) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimEnumUtil">
            <summary>Moon.Orm.Util.EnumUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimEnumUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimEnumUtil.#ctor(Moon.Orm.Util.EnumUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimEnumUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimEnumUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimEnumUtil.GetEnumNameByValueOf1Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Int32,System.String})">
            <summary>设置 EnumUtil.GetEnumNameByValue(Int32 value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimEnumUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimEnumUtil.Constructor">
            <summary>设置 EnumUtil.EnumUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimEnumUtil.GetValueObject">
            <summary>设置 EnumUtil.GetValue(Object enumObj) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimEnumUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimIOUtil">
            <summary>Moon.Orm.Util.IOUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimIOUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimIOUtil.#ctor(Moon.Orm.Util.IOUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimIOUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimIOUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimIOUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimIOUtil.Constructor">
            <summary>设置 IOUtil.IOUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimIOUtil.CreateDirectoryWhenNotExistString">
            <summary>设置 IOUtil.CreateDirectoryWhenNotExist(String path) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimIOUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimJsonUtil">
            <summary>Moon.Orm.Util.JsonUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.#ctor(Moon.Orm.Util.JsonUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.ConvertJsonToEntityBaseOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,``0})">
            <summary>设置 JsonUtil.ConvertJsonToEntityBase(String json) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.ConvertJsonToListEntityBaseOf1String``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.String,System.Collections.Generic.List{``0}})">
            <summary>设置 JsonUtil.ConvertJsonToListEntityBase(String json) 的 填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimJsonUtil.ConvertListEntityBaseToJsonOf1ListOfM0``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.String})">
            <summary>设置 JsonUtil.ConvertListEntityBaseToJson(List`1&lt;!!0&gt; list) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.Constructor">
            <summary>设置 JsonUtil.JsonUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.ConvertJsonToJObjectString">
            <summary>设置 JsonUtil.ConvertJsonToJObject(String json) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.ConvertOneSimpleJsonToJObjectDictionaryStringBoolean">
            <summary>设置 JsonUtil.ConvertOneSimpleJsonToJObjectDictionary(String simpleDataJson, Boolean withoutPre) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.DataReaderToJsonIDataReader">
            <summary>设置 JsonUtil.DataReaderToJson(IDataReader dataReader) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.DicToJsonDictionaryOfStringMObject">
            <summary>设置 JsonUtil.DicToJson(Dictionary`2&lt;String,MObject&gt; dic) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.JString2StringString">
            <summary>设置 JsonUtil.JString2String(String s) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimJsonUtil.String2JStringString">
            <summary>设置 JsonUtil.String2JString(String s) 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._String”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._String01”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._StringBoolean”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._StringChar”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._StringDateTimeOut”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimJsonUtil._StringDoubleOut”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Util.Fakes.ShimJsonUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimListUtil">
            <summary>Moon.Orm.Util.ListUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimListUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimListUtil.#ctor(Moon.Orm.Util.ListUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimListUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimListUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimListUtil.GetCountListListOf1ListOfM0Int32``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{System.Collections.Generic.List{``0},System.Int32,System.Collections.Generic.List{System.Collections.Generic.List{``0}}})">
            <summary>设置 ListUtil.GetCountListList(List`1&lt;!!0&gt; list, Int32 count) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimListUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimListUtil.Constructor">
            <summary>设置 ListUtil.ListUtil() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimListUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimLogUtil">
            <summary>Moon.Orm.Util.LogUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimLogUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimLogUtil.#ctor(Moon.Orm.Util.LogUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimLogUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimLogUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.Constructor">
            <summary>设置 LogUtil.LogUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.DebugString">
            <summary>设置 LogUtil.Debug(String content) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.ErrorString">
            <summary>设置 LogUtil.Error(String content) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.ExceptionException">
            <summary>设置 LogUtil.Exception(Exception ex) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.StaticConstructor">
            <summary>设置 LogUtil.LogUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.WarningString">
            <summary>设置 LogUtil.Warning(String content) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimLogUtil.WriteStringString">
            <summary>设置 LogUtil.Write(String type, String content) 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimLogUtil._”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimLogUtil._01”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimLogUtil._02”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Util.Fakes.ShimLogUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimModelUtil">
            <summary>Moon.Orm.Util.ModelUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimModelUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimModelUtil.#ctor(Moon.Orm.Util.ModelUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimModelUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimModelUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimModelUtil.ConvertJObjectToEntityBaseObjectOf1JObject``1(Microsoft.QualityTools.Testing.Fakes.FakesDelegates.Func{Newtonsoft.Json.Linq.JObject,``0})">
            <summary>设置 ModelUtil.ConvertJObjectToEntityBaseObject(JObject jobject) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimModelUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimModelUtil.Constructor">
            <summary>设置 ModelUtil.ModelUtil() 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimModelUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimPagerUtil">
            <summary>Moon.Orm.Util.PagerUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimPagerUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimPagerUtil.#ctor(Moon.Orm.Util.PagerUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimPagerUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimPagerUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimPagerUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimPagerUtil.Constructor">
            <summary>设置 PagerUtil.PagerUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimPagerUtil.GetOneWebPagesDataDbMQLBaseString">
            <summary>设置 PagerUtil.GetOneWebPagesData(Db db, MQLBase mql, String oneOrderbyFieldName) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimPagerUtil.GetWebPagerDbStringStringMQLBaseInt32String">
            <summary>设置 PagerUtil.GetWebPager(Db db, String smallPageURL, String contentDomID, MQLBase mql, Int32 onePageDataCount, String oneOrderbyFieldName) 的 填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimPagerUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.ShimStringUtil">
            <summary>Moon.Orm.Util.StringUtil 的填充码类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimStringUtil.#ctor">
            <summary>初始化新的填充码实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimStringUtil.#ctor(Moon.Orm.Util.StringUtil)">
            <summary>初始化给定实例的新填充码</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimStringUtil.BehaveAsCurrent">
            <summary>为已填充的类型的所有方法分配“Current”行为</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.ShimStringUtil.BehaveAsNotImplemented">
            <summary>为已填充的类型的所有方法分配“NotImplemented”行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.Behavior">
            <summary>为已填充的类型的所有方法分配行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.Constructor">
            <summary>设置 StringUtil.StringUtil() 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.ConvertCSharpStringToStringString">
            <summary>设置 StringUtil.ConvertCSharpStringToString(String str) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.ConvertStringToCSharpStringString">
            <summary>设置 StringUtil.ConvertStringToCSharpString(String str) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.IsNullOrWhiteSpaceString">
            <summary>设置 StringUtil.IsNullOrWhiteSpace(String value) 的 填充码</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.ShimStringUtil.IsWhiteSpaceChar">
            <summary>设置 StringUtil.IsWhiteSpace(Char c) 的 填充码</summary>
        </member>
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimStringUtil._Char”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimStringUtil._Char01”忽略有格式错误的 XML 注释 -->
        <!-- 对于成员“P:Moon.Orm.Util.Fakes.ShimStringUtil._Char02”忽略有格式错误的 XML 注释 -->
        <member name="T:Moon.Orm.Util.Fakes.ShimStringUtil.AllInstances">
            <summary>为所有实例成员定义填充码</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubCloneUtil">
            <summary>Moon.Orm.Util.CloneUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubCloneUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubCloneUtil.InitializeStub">
            <summary>初始化 type StubCloneUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubCloneUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubCloneUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubCloneUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubDataTableUtil">
            <summary>Moon.Orm.Util.DataTableUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubDataTableUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubDataTableUtil.InitializeStub">
            <summary>初始化 type StubDataTableUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubDataTableUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubDataTableUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubDataTableUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubEnumUtil">
            <summary>Moon.Orm.Util.EnumUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubEnumUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubEnumUtil.InitializeStub">
            <summary>初始化 type StubEnumUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubEnumUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubEnumUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubEnumUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubIOUtil">
            <summary>Moon.Orm.Util.IOUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubIOUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubIOUtil.InitializeStub">
            <summary>初始化 type StubIOUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubIOUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubIOUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubIOUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubJsonUtil">
            <summary>Moon.Orm.Util.JsonUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubJsonUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubJsonUtil.InitializeStub">
            <summary>初始化 type StubJsonUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubJsonUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubJsonUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubJsonUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubListUtil">
            <summary>Moon.Orm.Util.ListUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubListUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubListUtil.InitializeStub">
            <summary>初始化 type StubListUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubListUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubListUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubListUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubLogUtil">
            <summary>Moon.Orm.Util.LogUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubLogUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubLogUtil.InitializeStub">
            <summary>初始化 type StubLogUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubLogUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubLogUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubLogUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubModelUtil">
            <summary>Moon.Orm.Util.ModelUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubModelUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubModelUtil.InitializeStub">
            <summary>初始化 type StubModelUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubModelUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubModelUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubModelUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubPagerUtil">
            <summary>Moon.Orm.Util.PagerUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubPagerUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubPagerUtil.InitializeStub">
            <summary>初始化 type StubPagerUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubPagerUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubPagerUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubPagerUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
        <member name="T:Moon.Orm.Util.Fakes.StubStringUtil">
            <summary>Moon.Orm.Util.StringUtil 的存根类型</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubStringUtil.#ctor">
            <summary>初始化新实例</summary>
        </member>
        <member name="M:Moon.Orm.Util.Fakes.StubStringUtil.InitializeStub">
            <summary>初始化 type StubStringUtil 的新实例</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubStringUtil.CallBase">
            <summary>获取或设置一个值，该值指示是否应调用基方法而不调用回退行为</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubStringUtil.InstanceBehavior">
            <summary>获取或设置实例行为。</summary>
        </member>
        <member name="P:Moon.Orm.Util.Fakes.StubStringUtil.InstanceObserver">
            <summary>获取或设置实例观察者。</summary>
        </member>
    </members>
</doc>
